name: End-to-end tests

on:
  push:
    branches:
      - "**"
      - "!master"

env:
  ACCESS_LOG_PATH:
  PGUSER: moncomptepro
  PGPASSWORD: moncomptepro
  PGDATABASE: moncomptepro
  PGHOST: 127.0.0.1
  PGPORT: 5432
  DATABASE_URL: postgres://moncomptepro:moncomptepro@127.0.0.1:5432/moncomptepro
  BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
  MONCOMPTEPRO_HOST: http://172.18.0.1:3000
  CYPRESS_BASE_URL: http://172.18.0.1:3000
  DO_NOT_SEND_MAIL: "False"
  DO_NOT_CHECK_EMAIL_DELIVERABILITY: "True"
  CONSIDER_ALL_EMAIL_DOMAINS_AS_NON_FREE: "True"
  DO_NOT_RATE_LIMIT: "True"
  DO_NOT_USE_ANNUAIRE_EMAILS: "True"
  DO_NOT_AUTHENTICATE_BROWSER: "True"
  SESSION_COOKIE_SECRET: secret
  DEBOUNCE_API_KEY: ${{ secrets.DEBOUNCE_API_KEY }}
  SENTRY_DSN:
  INSEE_CONSUMER_KEY: ${{ secrets.INSEE_CONSUMER_KEY }}
  INSEE_CONSUMER_SECRET: ${{ secrets.INSEE_CONSUMER_SECRET }}
  CYPRESS_MAILSLURP_API_KEY: ${{ secrets.MAILSLURP_API_KEY }}
  SECURE_COOKIES: "false"
  ZAMMAD_URL: ${{ secrets.ZAMMAD_URL }}
  ZAMMAD_TOKEN: ${{ secrets.ZAMMAD_TOKEN }}
  MODERATION_TAG: "github-action-e2e-test"
  SYMMETRIC_ENCRYPTION_KEY: aTrueRandom32BytesLongBase64EncodedStringAA=
  JWKS: '{"keys":[{"crv":"P-256","x":"UtmbpHb1aHibmvEQJ2KlIzNro4tGfyMiBIVmO92YX7Q","y":"YsRG_NMtLOqvA6S9zq5r7M9Y-Cgo4YwKvH3xXyvFE2E","d":"taURynSwshCfxEWs6z2_Xz-ocheg-6ePaU87cjy572Y","kty":"EC","kid":"GCirOyeBc0rlWhcbMnwe9FUadPk6ToJlOq3yvxvkKlE","use":"enc"},{"crv":"P-256","x":"2SSoeci15SnMM6wwxvNwzp_xjVTwgEALOY1NvTBbdqs","y":"Gplus4XyX4dQ6Z0Pwb0UhsmJfx7S5_DCFxpK6yt396Q","d":"TLeCkidQUJG9s6hvHx8QSHNKfqyhcbIXCN7rJ67AjH4","kty":"EC","kid":"TeXJ6Hx4sG9A13LCFlU46-PYGopwwFOsmCTEJcwZvZ8","use":"sig"},{"crv":"Ed25519","x":"NQNM3isoJAeK6HWKEgHifRqFrC-R6ufusnv47BnlWn4","d":"WxFz4Ulx6rLBO5HHHhg86BMc_CtRoCmFn8Gwy-kbaL4","kty":"OKP","kid":"onHSTAw1rfQOz_qWnPTh2SZzrseoqbOOrD1tcxFOaIU","use":"sig"},{"e":"AQAB","n":"5yuakCQKnkzP4tNXYI6qRYX-0pyeuGKS8VKl7S1QNj7bAMjeV2o3xjDgg4qtrUrFrqxSFOfBX5kJR3NEBoYiQpUwl9zPmKNLR0zX0w6VpwDREDS8bpBL_naeiGRdLX_AYxR7jCsDETEXqFm0S1CmfLjgAoazLPDxzGvFaezLEo0rafcLR3MpKIa-INqwCoTiLWUAtXKv-ZcmO7QuzRcVJecFs7WaMQZNMrfSAdj-agdnVOkP2cXnd6xpT2Pcph7I6z2slRkEZ_Oz1BkG-FV_21IlY1U4tE3GigKdSNRSJmuyvdgI4wDb2noZdEStFr8nsOsG63kIYM_Gve-HWiTxmQ","d":"qClmBFjTiJgj2cMXmtvtLSnuVtMr-sFqVzZiEYiXAv7yXT3B0CEqdXf0unvVH2x3JTuhcies2Zf_0gQdhglpPro8YRx1v3l6N2HE1nmTj6reakWSlXNOdMthQ6KOzZxTHUA3J53aW1U0-nhW2TrQAYaTHgNSr-yOWMBFGWrxxomc8h_1OnnXS9wRxoicPshjx7S8huy3YLbWzQphBqzBx5vsPOClfbs0dtxhAY63vXbNDS_sAIVfn1U__f6ilFmzE9odgOydsSwBUtRm2Ir4wY5HhqYGRPOKAUNHLqEsDqwmp_o3RtBQwg937ymbOJvgoa6qkqg_uxtaVSP7RX4EKQ","p":"-X7pv_NpfJvqTTlQwQnaz6eiA_I7v7Jj0l1KtmBRBZz6q6R9qq1BVlP8XeOBO5TX9vQKIooY8fL3QsWf73ZqQmmy9W3C4dAhwbwalvBzZHZT2Wznrurp_bML_8Xx1XhNxTawAb263O3AUz7Rw3g5lI2cafTe4x1dSO8_CHL3eMs","q":"7TJj6aNzkVjyPeCZVHwBXGDWDIT2DxqWRjKrKgqlpWdzEftNce855Wg3Ve4JnNtFkg7Qow4imZVkbK69ChIStv9s1KDX_sGRCyfN17d0jlkyGUnFB2RSBB42t7SmcC4ZhHjxdAdopOG_o1r5vEwDo-0hKWikP9uyYmWyhfY3hqs","dp":"g0dYT3wQ4VRY8NFbwHci_2jBQzpOXgvLooEcMuJzP3TeITqoNQp8-qOuguiWs3caPAMk4g-wGH8zw5qhEStJtjBPzfw3MwKFAJ-tjgZvcUkhzaIUNmG9RZTUl3zcRurKYR7pdcETdfRT4nmHfkbgZV4uE0KZlP96ekoI7LUxqgk","dq":"1Gpl81t_KVDgTu2OIoySo2nNBpUjzc7feKnzgsjaItALyrSkXD4COSElPPzY-vGa0fwWd483CRcyQeoSPKyGuf7wNVJ9XBV4kObqfh46cSgLp33axo3erPVpxwYubxO5olq00FW6Lr5D4kSclTX1pJ29LtoZDV7v1xJ_11vxydU","qi":"4RyTKy-QINtOUezaLEymzNBIG3uZv_IKvGPhEYi4wRNP_XxIK9NwfgUFRAhxhpxSpEjco_eNuN3I6XBF7bXb4-Bnnye1mBm3sBTXx2_09r8zt9Uvg3cdh0pYem3hU1ANMRmr3rfjtain4DTskIJ2CxjvGIMyh3VXLyRyfzIGJig","kty":"RSA","kid":"kddKa_IDmU8a5RhJaIzwzpJcFe4qT-GtNFcG2AWclZ4","use":"enc"},{"e":"AQAB","n":"6btLS-c06m18O5BlLvJA4HJNVI7WauBg5JVoy1cHTdfjTJ-oSts5uetXKF_NlNcLuq-zIKZuu9wea5m2E3lJ-vtCSAtRaJgZY41KAOjIsrHQstVuc9di4zjgcA6zwEXhqwu48gklGKpWNk7wnfMCO6mNoRs_-8-CnK6lTFeJFzfoCDmS6dYbefmPeFW4qziEZzEv5DPGAcUsXXZhbOku_E8gILRVMkBwHpvY_G3jngE1EWXctiM9tYqhgvxyJC9QyPCVpgfAvDlslMpuQTxBviC9PsrcBaQ5PyAP_xNN3X8LB-STpz7jNpNquKL5Ls0Hv9R3fDCeHvcYoVsgDirwfQ","d":"L0a7DDdP9LsAjeu_C6fkh4GXMqtRo3yPHK077SVFTPGGAFGq8Lk3C-wWTQxTwO9eZ_xx9wCzFTyIyqrksTuvQxzfY0MmzEk3mXNSrKxpK_vbgtC47qV6UwuGGiRfJ1z7MGXGmu5OmpaZqZJ-CPTGVtsM0rF4V665dIe-15o9GHzLX80mhw8ySd0qqBIbdIWlK2zaSRPGL08mP02t_XnHdCCaWfRE_erO6zsEhR8ePvbmQqI7GRBull59seXefo1VDP30lEwHwH05Ju24_ZddhfuP2Y9jkZnNKqpSHF3EZzT6Vh3ggAaLjQzRWJvd1_0Zit7CD06o6L1aLV7nDnTYAQ","p":"_u6v29kLICnGvbF44-sF5cFisrIPyXcj8laaNx6uP5ax9ZOPD_THdxTFU3YWLUErzi4MQJQPLoJacphQJKnG78b0PX_733--r-vpqUqfbzAlIssS8N4CFj6_YEMFR8W70laXJYJdx7IsnGOAlxAUZur5ugaaR0zDzlMTQVuR30E","q":"6rXguomnHNGFslAeHWPxPDaHxihx3eRJ-8t1KyvvwT43YfdPn2xxdq5-TyO0MMKznvDIHk9HDMBMr8JH32Q9qx75Ec81NOLGkBWqO9x-8dBlKn95jr8-qkD3iXHmJiHHNWNurHJM4G4lo73IL_0jgo0CCpcZWP7iH5y-b_mXPj0","dp":"Cyf-4iwZZIrve5WsqKy8UVWpMBDCyBpCpHRNw2PAVGAP4aNXe2dG41sxV3mvdsOHWzqApsLT90EVHDa2KySS5CNcxOQ47Yr1mVVFoHb3izIcLe2dIpVUmgyc62WDcaShl47ahnWyDO8rLJzeH75AZlCaJR3s2nnth7Xy_cU4GQE","dq":"SvJe21HfQe2JsqGwrBPg0ShcfKMnkQI3uaaDOJDkEyHJz4eILlETfiFEBgNRo4xYjPU4Aa2w81poYms4RhYdNwpB4DT5OXT8kL_KRykmhBLWaxafezyIRxdNs97h7eU1Vk_05C3vbG7fqASO6vv7HdHnB_ityGRDUnLbwKfDasU","qi":"QomRmnqrW3k8cV8MIefgmKZMGDGHRC44bFk9B20YR15_XHcMimi7o9rjUE7BY-RO30RsPUiQqB_vkpKvQZILOuPmIQhElcgmguKqPNwprVMgx-krUQ1Khuh3tgzxhBgazXzPcKmx8JBbCopP_UwNiCpPcdm74VFcZ-OswmqQU08","kty":"RSA","kid":"lFWqEBQbScnjO5OzUbvkPp0rmjGy17bmzZOqUbWkQMo","use":"sig"}]}'
jobs:
  test:
    strategy:
      # don't fail the entire matrix on failure
      fail-fast: false
      matrix:
        e2e_test:
          - activate_totp
          - check_email_deliverability
          - delete_account
          - delete_totp
          - join_and_moderation
          - join_collectivite_territoriale_official_contact_domain
          - join_must_confirm
          - join_org_with_gouv_fr_domain
          - join_org_with_trackdechets_domain
          - join_org_with_verified_domain
          - join_with_code_sent_to_official_contact_email
          - join_with_code_sent_to_official_educ_nat_contact_email
          - join_with_official_contact_email
          - join_with_sponsorship
          - reauthenticate_on_admin_page
          - redirect_after_session_expiration
          - reset_password
          - set_info_after_account_provisioning
          - signin_from_agentconnect_client
          - signin_from_legacy_client
          - signin_from_standard_client
          - signin_with_email_verification_renewal
          - signin_with_magic_link
          - signin_with_totp
          - signup_entreprise_unipersonnelle
          - update_personal_information
          - update_totp_application
    runs-on: ubuntu-22.04
    services:
      moncomptepro-standard-client:
        image: ghcr.io/numerique-gouv/moncomptepro-test-client
        ports:
          - 4000:3000
        env:
          SITE_TITLE: moncomptepro-standard-client
          HOST: http://localhost:4000
          MCP_CLIENT_ID: standard_client_id
          MCP_CLIENT_SECRET: standard_client_secret
          MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
          MCP_SCOPES: openid email profile organization
          STYLESHEET_URL: ""
      moncomptepro-agentconnect-client:
        image: ghcr.io/numerique-gouv/moncomptepro-test-client
        ports:
          - 4001:3000
        env:
          SITE_TITLE: moncomptepro-agentconnect-client
          HOST: http://localhost:4001
          MCP_CLIENT_ID: agentconnect_client_id
          MCP_CLIENT_SECRET: agentconnect_client_secret
          MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
          MCP_SCOPES: openid uid given_name usual_name email siren siret organizational_unit belonging_population phone chorusdt is_service_public is_public_service
          MCP_ID_TOKEN_SIGNED_RESPONSE_ALG: ES256
          MCP_USERINFO_SIGNED_RESPONSE_ALG: ES256
          STYLESHEET_URL: ""
          LOGIN_HINT: unused1@yopmail.com
      moncomptepro-legacy-client:
        image: ghcr.io/numerique-gouv/moncomptepro-test-client
        ports:
          - 4002:3000
        env:
          SITE_TITLE: moncomptepro-legacy-client
          HOST: http://localhost:4002
          MCP_CLIENT_ID: legacy_client_id
          MCP_CLIENT_SECRET: legacy_client_secret
          MCP_PROVIDER: ${{ env.MONCOMPTEPRO_HOST }}
          MCP_SCOPES: openid email profile phone organizations
          STYLESHEET_URL: ""
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
          POSTGRES_DB: ${{ env.PGDATABASE }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version-file: package.json
      - run: npm ci --include=dev
      - run: npm run migrate up
      - run: npm run fixtures:load-ci -- cypress/e2e/${{ matrix.e2e_test }}/fixtures.sql
      - run: npm run update-organization-info -- 500
      - name: Cypress run
        uses: cypress-io/github-action@v6.7.2
        with:
          wait-on: ${{ env.MONCOMPTEPRO_HOST }}/users/start-sign-in
          build: npm run build:assets
          start: npx dotenvx run -f cypress/e2e/${{ matrix.e2e_test }}/env.conf --overload -- npm start
          install: false
          spec: cypress/e2e/${{ matrix.e2e_test }}/index.cy.ts
        env:
          NODE_ENV: production
      # Store tests runs in case of failure
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.e2e_test }}-videos
          path: cypress/videos
